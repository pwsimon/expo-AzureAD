{"version":3,"file":"static/js/main.b0a9f0a7.js","mappings":"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","sources":["App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import * as React from 'react';\r\nimport * as WebBrowser from 'expo-web-browser'; // [Expo WebBrowser](https://docs.expo.dev/versions/latest/sdk/webbrowser/)\r\nimport * as Linking from 'expo-linking';\r\nimport {\r\n\t\tuseAuthRequest, // [Hooks](https://docs.expo.dev/versions/latest/sdk/auth-session/#hooks)\r\n\t\tuseAutoDiscovery,\r\n\t\tmakeRedirectUri, // (static) [Methods](https://docs.expo.dev/versions/latest/sdk/auth-session/#methods)\r\n\t\texchangeCodeAsync,\r\n\t\tstartAsync,\r\n\t\tTokenResponse, // [Classes](https://docs.expo.dev/versions/latest/sdk/auth-session/#classes)\r\n\t\tResponseType // [Types](https://docs.expo.dev/versions/latest/sdk/auth-session/#types)\r\n\t} from 'expo-auth-session'; // [Expo AuthSession](https://docs.expo.dev/versions/latest/sdk/auth-session/)\r\nimport {\r\n\tPlatform,\r\n\tStyleSheet,\r\n\tStatusBar,\r\n\tView,\r\n\tText,\r\n\tButton } from 'react-native';\r\n\r\n// das funktioniert nur wenn ...\r\nWebBrowser.maybeCompleteAuthSession();\r\n\r\nexport default function App() {\r\n\t// interface [DiscoveryDocument](https://docs.expo.dev/versions/latest/sdk/auth-session/#discoverydocument)\r\n\tconst discoveryDoc = useAutoDiscovery('https://login.microsoftonline.com/a0225615-7f89-4786-a96e-2bd64c8db5c7/v2.0'); // Endpoint\r\n\r\n\tconst requestConfig = { // interface [AuthRequestConfig](https://docs.expo.dev/versions/latest/sdk/auth-session/#authrequestconfig)\r\n\t\t\tclientId: 'a26fba9c-c752-4af1-8be4-ba80d2a4d36e',\r\n\t\t\tscopes: ['openid', 'profile', 'email', 'offline_access'],\r\n\t\t\tresponseType: ResponseType.IdToken, // https://docs.expo.dev/versions/latest/sdk/auth-session/#idtoken\r\n\t\t\textraParams: { nonce: \"nonce\" }, // https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type\r\n\t\t\tredirectUri: makeRedirectUri({\r\n\t\t\t\t\tscheme: 'azuread' // https://docs.expo.dev/versions/latest/config/app/#scheme\r\n\t\t\t\t})\r\n\t\t}\r\n\tconst [\r\n\t\t\trequest, // [Class AuthRequest](https://docs.expo.dev/versions/latest/sdk/auth-session/#authrequest)\r\n\t\t\tresponse, // [Type AuthSessionResult](https://docs.expo.dev/versions/latest/sdk/auth-session/#authsessionresult)\r\n\t\t\tpromptAsync\r\n\t\t] = useAuthRequest(requestConfig, discoveryDoc);\r\n\r\n\t/*\r\n\t* typischerweise erkennen wir das resolve/reject der Async Function: promptAsync()\r\n\t* durch ein: useEffect(, [response])\r\n\t* siehe auch: promptAsync.then()\r\n\t*/\r\n\tReact.useEffect(() => {\r\n\t\t\tif (response && response.type === 'success') {\r\n\t\t\t\tconst oTR = TokenResponse.fromQueryParams(response.params),\r\n\t\t\t\t\ttoken = response.params.access_token;\r\n\r\n\t\t\t\tconsole.log(\"response changed => type:\", response.type);\r\n\t\t\t\tiNetTokenVerify(oTR.idToken);\r\n\t\t\t}\r\n\t\t}, [response]);\r\n\r\n\t/*\r\n\t* das ist die \"kleine\" version von ReactRouter (Navigate)\r\n\t* wir fangen und behandeln mit dem \"addEventListener(\"url\", ...\") die Navigation\r\n\t*/\r\n\tReact.useEffect(() => {\r\n\t\t/*\r\n\t\t* [Linking.addEventListener(type, handler)](https://docs.expo.dev/versions/latest/sdk/linking/#linkingaddeventlistenertype-handler)\r\n\t\t* [EventType](https://docs.expo.dev/versions/latest/sdk/linking/#eventtype)\r\n\t\t*/\r\n\t\tconsole.log(\"App mount\");\r\n\t\tLinking.addEventListener(\"url\", (e) => {\r\n/*\r\n* typisch an dieser stelle ein: xxx://yyy/authRedirect\r\n* z.B. http://localhost:19006/authRedirect?id_token=hurts\r\n* z.B. exp://10.20.4.63:19000/--/authRedirect?id_token=hurts\r\n*/\r\n\t\t\tconsole.log(\"capture navigate:\", e.url);\r\n\t\t});\r\n\t},\r\n\t[]); // https://react.dev/reference/react/useEffect#examples-dependencies\r\n\r\n\t/*\r\n\t* [useURL](https://docs.expo.dev/versions/latest/sdk/linking/#useurl)\r\n\t* [Handling links](https://docs.expo.dev/guides/linking/#handling-links)\r\n\t*\r\n\t* [uri-scheme](https://github.com/expo/expo-cli)\r\n\t* Expo Go in Development (adjust the '127.0.0.1:19000' to match your dev server URL)\r\n\t*\r\n\t*     npx uri-scheme open exp://192.168.178.41:19000/--/somepath/into/app?hello=world --ios // pshome\r\n\t*     npx uri-scheme list\r\n\t*/\r\n\tconst baseUrl =\tLinking.useURL(); \r\n\r\n\tconst login = () => {\r\n\t\tconst promptOptions = null; // [AuthRequestPromptOptions](https://docs.expo.dev/versions/latest/sdk/auth-session/#authrequestpromptoptions)\r\n\t\tpromptAsync(/*promptOptions*/)\r\n\t\t\t.then(authSessionResult => { // [Type AuthSessionResult](https://docs.expo.dev/versions/latest/sdk/auth-session/#authsessionresult)\r\n\t\t\t\t\tconst oTR = TokenResponse.fromQueryParams(authSessionResult.params);\r\n\t\t\t\t\t// console.log(\"fullfilled => type:\", authSessionResult.type);\r\n\t\t\t\t})\r\n\t\t\t.catch((e) => { console.log(\"exception:\", e); });\r\n\t}\r\n\tconst sUCSID = \"ws0021.local\";\r\n\tconst iNetTokenVerify = (sToken) => {\r\n/*\r\n* using UCConnect needs: UCSID/Tenant (Mandant)\r\n* folgende constellation:\r\n* UCServer, \\\\ws0021\\dev\\procall_master (feature/PROCALL-3267-verifyJWT), \r\n* AppServer, IIS\r\n* Achtung!\r\n* ein Login/CreateSession ist vermutlich einfacher denn:\r\n* wg. verschaerfter CORS regeln im UCConnect darf ich keine header x-sessionid mehr schicken ...\r\n*/\r\n\t\tfetch(`https://devuccontroller.ucconnect.de/controller/client/ucws?ucsid=${sUCSID}`)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(oDiscover => {\r\n\t\t\t\tconst oArgument = {\r\n\t\t\t\t\t\t\t_type: \"AsnTokenVerifyArgument\",\r\n\t\t\t\t\t\t\tsToken: sToken\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\toInit = {\r\n\t\t\t\t\t\t\tmethod: \"POST\",\r\n\t\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\t\t\t\t\"x-ucsid\": sUCSID\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tbody: JSON.stringify(oArgument)\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\treturn fetch(`${oDiscover.redirect}/ws/direct/asnTokenVerify`, oInit)\r\n\t\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(oTokenVerifyResult => console.log(oTokenVerifyResult) )\r\n\t\t\t.catch(e =>  console.log(\"iNetTokenVerify() failed:\", e));\r\n\t}\r\n\tconst exchangeCode = () => {\r\n\t\tconst config = { // interface [AccessTokenRequestConfig](https://docs.expo.dev/versions/latest/sdk/auth-session/#accesstokenrequestconfig)\r\n\t\t\t\tcode: response.params.code,\r\n\t\t\t\tredirectUri: makeRedirectUri({ scheme: 'azuread'})\r\n\t\t\t};\r\n\t\texchangeCodeAsync(config, discoveryDoc)\r\n\t\t\t.then(data => console.log(data));\r\n\t}\r\n\tconst _createURL = () => {\r\n/*\r\n* [Expo Linking](https://docs.expo.dev/versions/latest/sdk/linking/)\r\n* ich kann aus meiner \"Anwendung\" heraus zu einer anderen Site Navigieren ...\r\n* wobei es egal ist ob ich in einem Browser, Expo Go, ... gehosted bin.\r\n* [Examples](https://docs.expo.dev/versions/latest/sdk/linking/#examples)\r\n* liefert einen, zum Environment/Host, passenden Url ...\r\n*/\r\n\t\tconsole.log(\"createURL() =>\", Linking.createURL(\"deepLink\")); // create a link into YOUR App\r\n\t\tconsole.log(\"baseUrl:\", baseUrl); // nur der vollstaendigkeit halber (wird nicht verwendet)\r\n\t\tconsole.log(\"Platform.OS:\", Platform.OS); // nur der vollstaendigkeit halber (wird nicht verwendet)\r\n\t\tLinking.getInitialURL()\r\n\t\t\t.then(sInitialURL => console.log(\"getInitialURL() =>\", sInitialURL)); // where we come from\r\n\r\n\t\tif(\"web\" === Platform.OS) {\r\n\t\t\tconsole.assert(baseUrl); // haben wir IMMER im fall: \"web\" === Platform.OS\r\n/*\r\n* UseCase: the App is executed from within: Expo Go App `npx expo start` using: ${baseUrl}\r\n* Web (dev): https://localhost:19006/deepLink\r\n* Web (prod): https://myapp.com/deepLink\r\n*\r\n* wenn wir eine SPA sind, also im Browser/Web, ist der returnUrl fuer ein einfaches: \"navigate-back\" ueberfluessig.\r\n* in allen anderen faellen koennen wir damit den workflow steuern.\r\n*/\r\n\t\t\t// Linking.openURL(`https://auth.expo.io/@pwsimon/expo-azuread/start?authUrl=http://ws0021.estos.de/etapisrvsdk/solution/sso/redirect&returnUrl=http://localhost:19006/authRedirect?id_token=hurts`);\r\n\t\t\t// Linking.openURL(`http://ws0021.estos.de/etapisrvsdk/solution/sso/redirect`); // configure IIS reidrect: ${baseUrl}\r\n\t\t\t// Linking.openURL(`http://ws0021.estos.de/etapisrvsdk/solution/sso/expo-linking.html?returnUrl=${baseUrl}`);\r\n\t\t\t// Linking.openURL('https://expo.dev');\r\n\t\t} else {\r\n/*\r\n* UseCase: the App is executed from within: (custom build) Expo Go App `npx expo start --dev-client`\r\n* Bare: <scheme>://path - uses provided scheme or scheme from Expo config scheme.\r\n* Standalone, Custom: yourscheme://deepLink\r\n* Expo Client (dev): exp://128.0.0.1:19000/--/deepLink // [Creating URLs](https://docs.expo.dev/guides/linking/#creating-urls)\r\n* Expo Client (prod): exp://u.expo.dev/[project-id]?channel-name=[channel-name]&runtime-version=[runtime-version]\r\n*/\r\n\t\t\t// Linking.openURL(`http://ws0021.estos.de/etapisrvsdk/solution/sso/expo-linking.html?returnUrl=${baseUrl}`);\r\n\t\t\t// Linking.openURL('https://expo.dev'); // switch to installed Browser\r\n\t\t\t// Linking.openSettings(); // the SettingsPage from Expo Go App appear\r\n\t\t}\r\n\t}\r\n\tconst _makeRedirectUri = () => {\r\n/*\r\n* type [AuthSessionRedirectUriOptions](https://docs.expo.dev/versions/latest/sdk/auth-session/#authsessionredirecturioptions)\r\n* \"https://auth.expo.io/@your-username/your-app-slug/start\"\r\n* eg. https://auth.expo.io/@pwsimon/expo-azuread/start?authUrl=http://ws0021.estos.de/etapisrvsdk/solution/sso/redirect&returnUrl=http://localhost:19006/authRedirect?id_token=hurts\r\nredirectUri = \"\" // [Using auth.expo.io proxy?](https://github.com/expo/fyi/blob/main/auth-proxy-migration.md#using-authexpoio-proxy)\r\n*/\r\n\t\tconst expoAuthProxyOptions = {\r\n\t\t\t\t\tprojectNameForProxy: \"@pwsimon/expo-azuread/start\",\r\n\t\t\t\t\tuseProxy: true\r\n\t\t\t\t},\r\n\t\t\toptions = {\r\n\t\t\t\t\tscheme: 'azuread',\r\n\t\t\t\t\tpreferLocalhost: true\r\n\t\t\t\t},\r\n \t\t\t// (AuthSession.makeRedirectUri)[https://docs.expo.dev/versions/latest/sdk/auth-session/#authsessionmakeredirecturioptions]\r\n\t\t\tredirectUri = makeRedirectUri(expoAuthProxyOptions); // expoAuthProxyOptions | options | ...\r\n/*\r\n* die [Expo AuthSession](https://docs.expo.dev/versions/latest/sdk/auth-session/) generiert fuer fuer jeden\r\n* UseCase/Context: einen speziellen RedirectUri\r\n* Development Build: azuread:///\r\n* Expo Go: exp://localhost:19000\r\n* Web dev: https://localhost:19006\r\n* Web prod: https://yourwebsite.com\r\n*/\r\n\t\tconsole.log(\"makeRedirectUri() =>\", redirectUri);\r\n\t}\r\n\tconst customAuthProxy = () => {\r\n/*\r\n* Das ist die variante/versuch mit dem selfHosted AuthProxy.\r\n* Der fuer die App (msal-react-spa) konfigurierte: Umleitungs-URI zeigt auf *meinen* AuthProxy.\r\n* Azure App-Registrierungen erlauben mehrere Umleitungs-URI. So koennen wir beide statisch angeben.\r\n* welcher davon letztlich/tatsaechlich verwendet wir ergibt sich aus den QueryParametern zum IdProvider\r\n* local development: \"http://localhost:1310/\"\r\n* internet: \"https://authproxy.azurewebsites.net/\"\r\n*/\r\n\t\tconst authServiceUrl = encodeURIComponent(\"https://login.microsoftonline.com/a0225615-7f89-4786-a96e-2bd64c8db5c7/oauth2/v2.0/authorize\"); // we encode this, because it will be send as a query parameter\r\n\t\tconst authServiceUrlParameter = `authServiceUrl=${authServiceUrl}`;\r\n\t\tconst authUrl = `http://localhost:1310?${authServiceUrlParameter}`;\r\n\t\tconst options = {\r\n\t\t\t\tauthUrl,\r\n\t\t\t\treturnUrl: \"azuread://authProxy\" // YOUR_DEEP_LINK\r\n\t\t\t}; // [AuthSession.startAsync(options)](https://docs.expo.dev/versions/latest/sdk/auth-session/#authsessionstartasyncoptions)\r\n\t\tstartAsync(options)\r\n\t\t\t.then(authSessionResult => { // [Type AuthSessionResult](https://docs.expo.dev/versions/latest/sdk/auth-session/#authsessionresult)\r\n\t\t\t\t\tconsole.log(\"returned: (type)\", authSessionResult.type);\r\n\t\t\t\t});\r\n\t}\r\n\tconst expoAuthProxy = () => {\r\n/*\r\n* Das ist die variante/versuch mit dem Expo AuthProxy\r\n* eine loesung mittels: Proxy wirft die folgenden Fragen auf:\r\n* 1.) der Expo AuthProxy bzw. eine 'Proxy' loesung ist genrell 'deprecated'\r\n* 2.) der Expo AuthProxy kommt immer mit einer 'unangenehmen' sicherheits-warnung\r\n* In verbindung mit dem AzureAD gibt es da ein spezielles problem.\r\n* Ich das vom Expo AuthProxy geforderte '@' nicht verwenden ...\r\n* scheitert das an den [Einschraenkungen für Umleitungs-URI/Antwort-URL](https://learn.microsoft.com/de-de/azure/active-directory/develop/reply-url)\r\n*\r\n* loesungs-ansatz(e)\r\n* 1.) selbst gehosteter [AuthProxy](https://docs.expo.dev/versions/latest/sdk/auth-session/#proxy-service)\r\n* 2.) [Expo AuthProxy](https://auth.expo.io) und einen IdProvider ohne Einschraenkung beim Umleitungs-URI\r\n*     *keine* wirkliche option denn das feature wird kuenftig SDK > 48 nicht mehr verfuegbar sein\r\n*     eine Migration nach Deeplinking scheitert in kombination mit AzureAD wieder am Umleitungs-URI\r\n*/\r\n\t\tconst options = {\r\n\t\t\t\tauthUrl: \"https://login.microsoftonline.com/a0225615-7f89-4786-a96e-2bd64c8db5c7/oauth2/v2.0/authorize\",\r\n\t\t\t\t// returnUrl: \"\",\r\n\t\t\t\tprojectNameForProxy: \"@pwsimon/expo-azuread/start\"\r\n\t\t\t}; // [AuthSession.startAsync(options)](https://docs.expo.dev/versions/latest/sdk/auth-session/#authsessionstartasyncoptions)\r\n\t\tstartAsync(options)\r\n\t\t\t.then(authSessionResult => { // [Type AuthSessionResult](https://docs.expo.dev/versions/latest/sdk/auth-session/#authsessionresult)\r\n\t\t\t\t\tconsole.log(\"returned: (type)\", authSessionResult.type);\r\n\t\t\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t\t<View>\r\n\t\t\t\t<Text>URL: {Linking.createURL(\"\")}</Text>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tdisabled={!request}\r\n\t\t\t\t\ttitle=\"Login\"\r\n\t\t\t\t\tonPress={(e) => { login() }}>\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttitle=\"test\"\r\n\t\t\t\t\tonPress={(e) => { _createURL() }}>\r\n\t\t\t\t</Button>\r\n\t\t\t\t<StatusBar></StatusBar>\r\n\t\t\t</View>\r\n\t\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [801], () => (__webpack_require__(9484)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["App","discoveryDoc","useAutoDiscovery","requestConfig","clientId","scopes","responseType","ResponseType","IdToken","extraParams","nonce","redirectUri","makeRedirectUri","scheme","_useAuthRequest","useAuthRequest","_useAuthRequest2","_slicedToArray","request","response","promptAsync","React","type","oTR","TokenResponse","fromQueryParams","params","access_token","console","log","iNetTokenVerify","idToken","Linking","e","url","baseUrl","sUCSID","sToken","fetch","then","json","oDiscover","oArgument","_type","oInit","method","headers","body","JSON","stringify","redirect","oTokenVerifyResult","catch","_jsxs","View","children","Text","_jsx","Button","disabled","title","onPress","authSessionResult","Platform","OS","sInitialURL","assert","StatusBar","WebBrowser","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","value","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}